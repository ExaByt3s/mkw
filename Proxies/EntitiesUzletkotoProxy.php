<?php

namespace Proxies;

/**
 * THIS CLASS WAS GENERATED BY THE DOCTRINE ORM. DO NOT EDIT THIS FILE.
 */
class EntitiesUzletkotoProxy extends \Entities\Uzletkoto implements \Doctrine\ORM\Proxy\Proxy
{
    private $_entityPersister;
    private $_identifier;
    public $__isInitialized__ = false;
    public function __construct($entityPersister, $identifier)
    {
        $this->_entityPersister = $entityPersister;
        $this->_identifier = $identifier;
    }
    /** @private */
    public function __load()
    {
        if (!$this->__isInitialized__ && $this->_entityPersister) {
            $this->__isInitialized__ = true;

            if (method_exists($this, "__wakeup")) {
                // call this after __isInitialized__to avoid infinite recursion
                // but before loading to emulate what ClassMetadata::newInstance()
                // provides.
                $this->__wakeup();
            }

            if ($this->_entityPersister->load($this->_identifier, $this) === null) {
                throw new \Doctrine\ORM\EntityNotFoundException();
            }
            unset($this->_entityPersister, $this->_identifier);
        }
    }
    
    
    public function getCim()
    {
        $this->__load();
        return parent::getCim();
    }

    public function getId()
    {
        $this->__load();
        return parent::getId();
    }

    public function getNev()
    {
        $this->__load();
        return parent::getNev();
    }

    public function setNev($nev)
    {
        $this->__load();
        return parent::setNev($nev);
    }

    public function getIrszam()
    {
        $this->__load();
        return parent::getIrszam();
    }

    public function setIrszam($irszam)
    {
        $this->__load();
        return parent::setIrszam($irszam);
    }

    public function getVaros()
    {
        $this->__load();
        return parent::getVaros();
    }

    public function setVaros($varos)
    {
        $this->__load();
        return parent::setVaros($varos);
    }

    public function getUtca()
    {
        $this->__load();
        return parent::getUtca();
    }

    public function setUtca($utca)
    {
        $this->__load();
        return parent::setUtca($utca);
    }

    public function getTelefon()
    {
        $this->__load();
        return parent::getTelefon();
    }

    public function setTelefon($telefon)
    {
        $this->__load();
        return parent::setTelefon($telefon);
    }

    public function getMobil()
    {
        $this->__load();
        return parent::getMobil();
    }

    public function setMobil($mobil)
    {
        $this->__load();
        return parent::setMobil($mobil);
    }

    public function getFax()
    {
        $this->__load();
        return parent::getFax();
    }

    public function setFax($fax)
    {
        $this->__load();
        return parent::setFax($fax);
    }

    public function getEmail()
    {
        $this->__load();
        return parent::getEmail();
    }

    public function setEmail($email)
    {
        $this->__load();
        return parent::setEmail($email);
    }

    public function getHonlap()
    {
        $this->__load();
        return parent::getHonlap();
    }

    public function setHonlap($honlap)
    {
        $this->__load();
        return parent::setHonlap($honlap);
    }

    public function getPw()
    {
        $this->__load();
        return parent::getPw();
    }

    public function setPw($pw)
    {
        $this->__load();
        return parent::setPw($pw);
    }

    public function getPartnerek()
    {
        $this->__load();
        return parent::getPartnerek();
    }

    public function addPartner(\Entities\Partner $partner)
    {
        $this->__load();
        return parent::addPartner($partner);
    }

    public function removePartner(\Entities\Partner $partner)
    {
        $this->__load();
        return parent::removePartner($partner);
    }

    public function setFelhasznalo(\Entities\Felhasznalo $felhasznalo)
    {
        $this->__load();
        return parent::setFelhasznalo($felhasznalo);
    }

    public function removeFelhasznalo()
    {
        $this->__load();
        return parent::removeFelhasznalo();
    }

    public function getMegjegyzes()
    {
        $this->__load();
        return parent::getMegjegyzes();
    }

    public function setMegjegyzes($megjegyzes)
    {
        $this->__load();
        return parent::setMegjegyzes($megjegyzes);
    }


    public function __sleep()
    {
        return array('__isInitialized__', 'id', 'nev', 'irszam', 'varos', 'utca', 'telefon', 'mobil', 'fax', 'email', 'honlap', 'pw', 'megjegyzes', 'partnerek', 'felhasznalo', 'bizonylatfejek');
    }

    public function __clone()
    {
        if (!$this->__isInitialized__ && $this->_entityPersister) {
            $this->__isInitialized__ = true;
            $class = $this->_entityPersister->getClassMetadata();
            $original = $this->_entityPersister->load($this->_identifier);
            if ($original === null) {
                throw new \Doctrine\ORM\EntityNotFoundException();
            }
            foreach ($class->reflFields AS $field => $reflProperty) {
                $reflProperty->setValue($this, $reflProperty->getValue($original));
            }
            unset($this->_entityPersister, $this->_identifier);
        }
        
    }
}