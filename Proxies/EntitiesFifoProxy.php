<?php

namespace Proxies;

/**
 * THIS CLASS WAS GENERATED BY THE DOCTRINE ORM. DO NOT EDIT THIS FILE.
 */
class EntitiesFifoProxy extends \Entities\Fifo implements \Doctrine\ORM\Proxy\Proxy
{
    private $_entityPersister;
    private $_identifier;
    public $__isInitialized__ = false;
    public function __construct($entityPersister, $identifier)
    {
        $this->_entityPersister = $entityPersister;
        $this->_identifier = $identifier;
    }
    /** @private */
    public function __load()
    {
        if (!$this->__isInitialized__ && $this->_entityPersister) {
            $this->__isInitialized__ = true;

            if (method_exists($this, "__wakeup")) {
                // call this after __isInitialized__to avoid infinite recursion
                // but before loading to emulate what ClassMetadata::newInstance()
                // provides.
                $this->__wakeup();
            }

            if ($this->_entityPersister->load($this->_identifier, $this) === null) {
                throw new \Doctrine\ORM\EntityNotFoundException();
            }
            unset($this->_entityPersister, $this->_identifier);
        }
    }
    
    
    public function getId()
    {
        $this->__load();
        return parent::getId();
    }

    public function getRaktarid()
    {
        $this->__load();
        return parent::getRaktarid();
    }

    public function setRaktarid($d)
    {
        $this->__load();
        return parent::setRaktarid($d);
    }

    public function getTermekid()
    {
        $this->__load();
        return parent::getTermekid();
    }

    public function setTermekid($d)
    {
        $this->__load();
        return parent::setTermekid($d);
    }

    public function getTermekvaltozatid()
    {
        $this->__load();
        return parent::getTermekvaltozatid();
    }

    public function setTermekvaltozatid($d)
    {
        $this->__load();
        return parent::setTermekvaltozatid($d);
    }

    public function getKibizonylatfejid()
    {
        $this->__load();
        return parent::getKibizonylatfejid();
    }

    public function setKibizonylatfejid($id)
    {
        $this->__load();
        return parent::setKibizonylatfejid($id);
    }

    public function getKibizonylattetelid()
    {
        $this->__load();
        return parent::getKibizonylattetelid();
    }

    public function setKibizonylattetelid($id)
    {
        $this->__load();
        return parent::setKibizonylattetelid($id);
    }

    public function getBebizonylatfejid()
    {
        $this->__load();
        return parent::getBebizonylatfejid();
    }

    public function setBebizonylatfejid($id)
    {
        $this->__load();
        return parent::setBebizonylatfejid($id);
    }

    public function getBebizonylattetelid()
    {
        $this->__load();
        return parent::getBebizonylattetelid();
    }

    public function setBebizonylattetelid($id)
    {
        $this->__load();
        return parent::setBebizonylattetelid($id);
    }

    public function getMennyiseg($m)
    {
        $this->__load();
        return parent::getMennyiseg($m);
    }

    public function setMennyiseg($m)
    {
        $this->__load();
        return parent::setMennyiseg($m);
    }


    public function __sleep()
    {
        return array('__isInitialized__', 'id', 'raktarid', 'termekid', 'termekvaltozatid', 'kibizonylatfejid', 'kibizonylattetelid', 'bebizonylatfejid', 'bebizonylattetelid', 'mennyiseg');
    }

    public function __clone()
    {
        if (!$this->__isInitialized__ && $this->_entityPersister) {
            $this->__isInitialized__ = true;
            $class = $this->_entityPersister->getClassMetadata();
            $original = $this->_entityPersister->load($this->_identifier);
            if ($original === null) {
                throw new \Doctrine\ORM\EntityNotFoundException();
            }
            foreach ($class->reflFields AS $field => $reflProperty) {
                $reflProperty->setValue($this, $reflProperty->getValue($original));
            }
            unset($this->_entityPersister, $this->_identifier);
        }
        
    }
}