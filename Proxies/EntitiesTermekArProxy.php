<?php

namespace Proxies;

/**
 * THIS CLASS WAS GENERATED BY THE DOCTRINE ORM. DO NOT EDIT THIS FILE.
 */
class EntitiesTermekArProxy extends \Entities\TermekAr implements \Doctrine\ORM\Proxy\Proxy
{
    private $_entityPersister;
    private $_identifier;
    public $__isInitialized__ = false;
    public function __construct($entityPersister, $identifier)
    {
        $this->_entityPersister = $entityPersister;
        $this->_identifier = $identifier;
    }
    /** @private */
    public function __load()
    {
        if (!$this->__isInitialized__ && $this->_entityPersister) {
            $this->__isInitialized__ = true;

            if (method_exists($this, "__wakeup")) {
                // call this after __isInitialized__to avoid infinite recursion
                // but before loading to emulate what ClassMetadata::newInstance()
                // provides.
                $this->__wakeup();
            }

            if ($this->_entityPersister->load($this->_identifier, $this) === null) {
                throw new \Doctrine\ORM\EntityNotFoundException();
            }
            unset($this->_entityPersister, $this->_identifier);
        }
    }
    
    
    public function getId()
    {
        $this->__load();
        return parent::getId();
    }

    public function getTermek()
    {
        $this->__load();
        return parent::getTermek();
    }

    public function getTermekNev()
    {
        $this->__load();
        return parent::getTermekNev();
    }

    public function setTermek(\Entities\Termek $termek)
    {
        $this->__load();
        return parent::setTermek($termek);
    }

    public function removeTermek()
    {
        $this->__load();
        return parent::removeTermek();
    }

    public function getLastmod()
    {
        $this->__load();
        return parent::getLastmod();
    }

    public function getCreated()
    {
        $this->__load();
        return parent::getCreated();
    }

    public function getAzonosito()
    {
        $this->__load();
        return parent::getAzonosito();
    }

    public function setAzonosito($val)
    {
        $this->__load();
        return parent::setAzonosito($val);
    }

    public function getValutanem()
    {
        $this->__load();
        return parent::getValutanem();
    }

    public function getValutanemId()
    {
        $this->__load();
        return parent::getValutanemId();
    }

    public function setValutanem($val)
    {
        $this->__load();
        return parent::setValutanem($val);
    }

    public function removeValutanem()
    {
        $this->__load();
        return parent::removeValutanem();
    }

    public function getNetto()
    {
        $this->__load();
        return parent::getNetto();
    }

    public function setNetto($val)
    {
        $this->__load();
        return parent::setNetto($val);
    }

    public function getBrutto()
    {
        $this->__load();
        return parent::getBrutto();
    }

    public function setBrutto($val)
    {
        $this->__load();
        return parent::setBrutto($val);
    }


    public function __sleep()
    {
        return array('__isInitialized__', 'id', 'created', 'lastmod', 'termek', 'azonosito', 'netto', 'brutto', 'valutanem');
    }

    public function __clone()
    {
        if (!$this->__isInitialized__ && $this->_entityPersister) {
            $this->__isInitialized__ = true;
            $class = $this->_entityPersister->getClassMetadata();
            $original = $this->_entityPersister->load($this->_identifier);
            if ($original === null) {
                throw new \Doctrine\ORM\EntityNotFoundException();
            }
            foreach ($class->reflFields AS $field => $reflProperty) {
                $reflProperty->setValue($this, $reflProperty->getValue($original));
            }
            unset($this->_entityPersister, $this->_identifier);
        }
        
    }
}